name: Generate and Release Fusion Data

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'shard-hashes.json'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Set release tag
        id: set_tag
        run: echo "TAG=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Run scrape-wiki.py
        run: python scrape-wiki.py

      - name: Run find-all-recipes.py
        run: python find-all-recipes.py

      - name: Run format-fusions.py
        run: python format-fusions.py

      - name: Check for changed shards
        id: shards_changed
        run: |
          if [ -s changed-shards.txt ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect target branch from commit message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$COMMIT_MSG" | grep -iq '\[dev\]'; then
            echo "TARGET_BRANCH=dev" >> $GITHUB_ENV
          elif echo "$COMMIT_MSG" | grep -iq '\[master\]'; then
            echo "TARGET_BRANCH=master" >> $GITHUB_ENV
          else
            echo "TARGET_BRANCH=master" >> $GITHUB_ENV
          fi

      - name: Push changed hashes
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add shard-hashes.json
          sed '1iUpdate shard hashes\n' changed-shards.txt | git commit -F - || echo "No changes to commit"
          git push

      - name: Create Release
        if: steps.shards_changed.outputs.changed == 'true'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: Automated Release ${{ env.TAG }}
          body: 'Automated release of fusion data and recipes.'
          draft: false
          prerelease: false
          files: |
            dist/fusion-data.json
            dist/fusion-properties.json
            dist/fusion-recipes.json

      - name: Update SkyShards fusion data
        if: steps.shards_changed.outputs.changed == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: Campionnn/SkyShards
          event-type: update-fusion-data
          client-payload: |
            {
              "target_branch": "${{ env.TARGET_BRANCH }}"
            }
